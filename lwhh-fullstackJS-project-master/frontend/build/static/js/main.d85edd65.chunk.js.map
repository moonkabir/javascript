{"version":3,"sources":["values.js","components/loginsignup.js","components/urls.js","App.js","serviceWorker.js","index.js"],"names":["values","BASE","LoginSignup","state","isSignup","fullname","email","password","loginSuccess","showSignupForm","_this","setState","showLogin","updateStateValue","e","tgt","target","stateName","name","val","value","Object","defineProperty","loginSignup","_this$state","axios","post","concat","then","d","alert","catch","console","log","success","localStorage","setItem","data","token","getItem","this","react_default","a","createElement","react_router","to","className","style","styles","container","onChange","objectSpread","input","display","type","placeholder","onClick","Component","fontSize","color","Conditional","props","condition","children","UrlComponent","href","hash","destination","Urls","loggedIn","loading","newHash","urlList","scheduleClear","getMyList","get","headers","auth-token","handleKeyUp","evt","keyCode","urlVal","match","url","s","setTimeout","finally","onKeyUp","reverse","map","el","i","key","length","Home","App","react_router_dom","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d85edd65.chunk.js","sourcesContent":["const values = {\n    BASE: \"https://lwhhjs.herokuapp.com\"\n}\nexport default values;","import React, { Component } from 'react'\nimport '../style.css';\nimport axios from 'axios';\nimport values from '../values';\nimport {Redirect} from 'react-router-dom';\nexport default class LoginSignup extends Component {\n  state={\n      isSignup:false,\n      fullname:\"\",\n      email:\"\",\n      password:\"\",\n      loginSuccess:false\n  }\n  showSignupForm = ()=>{\n    this.setState({isSignup:true})\n  }\n  showLogin = ()=>{\n    this.setState({isSignup:false})\n  }\n  updateStateValue=(e)=>{\n    let tgt = e.target;\n    let stateName = tgt.name;\n    let val = tgt.value;\n    //debugger;\n    this.setState({\n      [stateName]:val\n    });\n  }\n  loginSignup = ()=>{\n    let {email,password} = this.state;\n    if(this.state.isSignup){\n      if(this.state.fullname && this.state.email && this.state.password){\n        let name = this.state.fullname;\n        axios.post(`${values.BASE}/signup`,{name,email,password})\n          .then(d=>{\n            alert(\"Congratulations! Sign up completed\");\n            this.setState({\n              isSignup:false\n            });\n          })\n          .catch(e=>{\n            console.log(\"Sign up Error! please try again\");\n          })\n          .then(d=>{\n            this.setState({\n              fullname:\"\",\n              email:\"\",\n              password:\"\"\n            });\n          })\n      }\n      else{\n        alert('Parameter missing for signup');\n      }\n    }\n    else{\n      if(this.state.email && this.state.password){\n        // Login Code\n        axios.post(`${values.BASE}/login`,{email,password})\n        .then(success=>{\n          //debugger;\n          localStorage.setItem('access_token',success.data.token);\n          this.setState({loginSuccess:true});\n        })\n        .catch(e=>{\n          alert(`Login Unsuccessful`);\n        });\n      }\n      else{\n        alert('Parameter missing for Login');\n      }\n    }\n  }\n  componentWillMount(){\n    if(localStorage.getItem('access_token')){\n      this.setState({loginSuccess:true});\n    }\n  }\n  render() {\n    //Redirect for login\n    if(this.state.loginSuccess){\n      return (<Redirect to=\"/\"/>);\n    }\n    //General Login page\n    return (\n      <div className=\"container\" style={styles.container}>\n        <h2>{this.state.isSignup?'Sign Up':'Log In'}</h2>\n        <div className=\"loginsignup\">\n            <input onChange={this.updateStateValue} \n            style={{...styles.input,display:this.state.isSignup?'block':'none'}} \n            type=\"text\" name=\"fullname\" \n            placeholder=\"full name\"/>\n            <input onChange={this.updateStateValue} \n            style={styles.input} \n            type=\"email\" name=\"email\" \n            placeholder=\"Email Address\"/>\n            <input onChange={this.updateStateValue} \n            style={styles.input} \n            type=\"password\" name=\"password\" \n            placeholder=\"Enter password\"/>\n        </div>\n        <div className=\"button\" onClick={this.loginSignup}>{this.state.isSignup?'Sign Up':'Login'}</div>\n        <div className=\"button\" style={{display:this.state.isSignup?'none':'block'}} onClick={this.showSignupForm}>Sign Up Now →</div>\n        <div className=\"button\" style={{display:this.state.isSignup?'block':'none'}} onClick={this.showLogin}>← Go Back To Login</div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n    input:{\n        fontSize:18,\n        color:'blue',\n        display:'block'\n    }\n}","import React, { Component } from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport values from '../values';\nimport axios from 'axios';\nfunction Conditional(props){\n  if(props.condition){\n    return (<div className={props.className}>\n      {props.children}\n    </div>);\n  }\n  else{\n    return null;\n  }\n}\nfunction UrlComponent(props){\n  return(<div className=\"url\">\n  <h4 className=\"shortened-url\"><a target=\"_blank\" href={`${values.BASE}/${props.data.hash}`}>{`${values.BASE}/${props.data.hash}`}</a></h4>\n  <div className=\"smalltext\">\n  <a target=\"_blank\" href={props.data.destination}>{props.data.destination}</a>\n  </div>\n  </div>);\n}\nexport default class Urls extends Component {\n  state={\n    loggedIn:true,\n    loading:true,\n    token:\"\",\n    newHash:\"\",\n    urlList:[]\n  }\n  componentWillMount(){\n    let token = localStorage.getItem('access_token');\n    if(!token){\n      this.setState({loggedIn:false});\n    }\n    else{\n      this.setState({token},this.getMyList);\n    }\n  }\n  scheduleClear = ()=>{\n    this.setState({newHash:\"\"});\n  }\n  getMyList = ()=>{\n    axios.get(`${values.BASE}/api/v1/redirects`,{headers:{'auth-token':this.state.token}})\n      .then(data=>{\n        this.setState({urlList:data.data});\n      })\n      .catch(e=>{\n        console.log(e);\n      })\n  }\n  handleKeyUp=(evt)=>{\n    if(evt.keyCode===13){ //enter key\n      let urlVal = evt.target.value;\n      evt.target.value = \"\";\n      if(urlVal && urlVal.match(/^https?:\\/\\/.{3,}/)){\n        this.setState({loading:true});\n        axios.post(`${values.BASE}/api/v1/redirects`,{url:urlVal},{headers:{'auth-token':this.state.token}})\n          .then(s=>{\n            console.log(s);\n            //alert(`Direction Created! ${values.BASE}/${s.data.hash}`);\n            this.setState({newHash:s.data.hash});\n            this.getMyList();\n            setTimeout(this.scheduleClear,10000);\n          })\n          .catch(e=>console.log(e))\n          .finally(()=>{\n            this.setState({loading:false});\n          });\n      }\n    }\n  }\n\n  render() {\n    if(!this.state.loggedIn){\n      return (<Redirect to=\"/\"/>);\n    }\n    return (\n      <div>\n        {/* New Entry */}\n        <div className=\"urlentry commonsize\">\n          <h3>\n            Add New URL\n          </h3>\n          <div>\n            <input onKeyUp={this.handleKeyUp} placeholder=\"Enter long URL. e.g: https://my-long.url/parameters?query\" type=\"url\"/>\n          </div>\n        </div>\n        {/* Success */}\n        <Conditional className=\"success commonsize\" condition={this.state.newHash}>\n          Your new Shortened URL is: <a target=\"_blank\" href={`${values.BASE}/${this.state.newHash}`}>{`${values.BASE}/${this.state.newHash}`}</a>\n        </Conditional>\n        {/* List */}\n        <div className=\"commonsize\">\n          <h3>Your URL List</h3>\n        </div>\n        <div className=\"url-list\">\n          {this.state.urlList.reverse().map((el,i)=><UrlComponent data={el} key={i}/>)}\n          {/* Empty State */}\n          <Conditional condition={!this.state.urlList.length} className=\"empty\">\n            🧐 hmm! Could not find anything yet!\n          </Conditional>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport LoginSignup from './components/loginsignup';\nimport Urls from './components/urls';\nimport { BrowserRouter as Router, Route, Link,Redirect } from \"react-router-dom\";\nfunction Home(){\n  let token = localStorage.getItem('access_token');\n  if(token){\n    return (<Redirect to=\"/urls\"/>);\n  }\n  else{\n    return (<Redirect to=\"/loginsignup\"/>);\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/loginsignup\" component={LoginSignup}/>\n          <Route path=\"/urls\" component={Urls}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}